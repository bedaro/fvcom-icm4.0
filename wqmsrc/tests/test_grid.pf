module test_grid
  use mod_prec, only: SP
  use funit
  use mod_sizes, only: mgl, ngl, nobty
  use mod_lims, only: nloc, mloc, ntloc, mtloc, kb, kbm1, kbm2
  implicit none

  contains
    @before
    subroutine set_up()
      use mod_control, only: msr, serial, par
      msr = .True.
      par = .False.
      serial = .True.
    end subroutine set_up

    @after
    subroutine clean()
      call cleanup_grid()
    end subroutine clean

    ! Construct a simple grid with no open boundary that
    ! allows making a velocity field
    subroutine build_simple_grid()
      use mod_hydrovars, only: xg, yg, z, hg, zz2d, hydro_geom_alloc, hydro_alloc, nvg
      use mod_wqm, only: wqm_alloc
      use mod_tge, only: triangle_grid_edge, tge_alloc
      
      kb = 4
      kbm1 = 3
      kbm2 = 2
      nobty = 0

      ngl = 16
      nloc = 16
      ntloc = 16
      mgl = 13
      mloc = 13
      mtloc = 13

      call hydro_geom_alloc

      xg = (/    0., 1000., 2000.,  500., 1500.,    0., 1000., 2000., &
               500., 1500.,    0., 1000., 2000. /)
      yg = (/    0.,    0.,    0.,  500.,  500., 1000., 1000., 1000., &
              1500., 1500., 2000., 2000., 2000. /)

      nvg(1,:) = (/ 1, 4, 2 /)
      nvg(2,:) = (/ 4, 5, 2 /)
      nvg(3,:) = (/ 2, 5, 3 /)
      nvg(4,:) = (/ 1, 6, 4 /)
      nvg(5,:) = (/ 4, 7, 5 /)
      nvg(6,:) = (/ 3, 5, 8 /)
      nvg(7,:) = (/ 4, 6, 9 /)
      nvg(8,:) = (/ 4, 9, 7 /)
      nvg(9,:) = (/ 5, 7, 10 /)
      nvg(10,:) = (/ 5, 10, 8 /)
      nvg(11,:) = (/ 6, 11, 9 /)
      nvg(12,:) = (/ 7, 9, 10 /)
      nvg(13,:) = (/ 8, 10, 13 /)
      nvg(14,:) = (/ 9, 11, 12 /)
      nvg(15,:) = (/ 10, 9, 12 /)
      nvg(16,:) = (/ 10, 12, 13 /)

      hg = 3._SP
      z = (/ 0., -0.333333, -0.666667, -1. /)

      call set_sigma
      call hydro_alloc
      call tge_alloc
      call pdomdec
      call triangle_grid_edge
      call cell_area
    end subroutine build_simple_grid

    subroutine cleanup_grid()
      use mod_hydrovars, only: hydro_geom_dealloc, hydro_dealloc
      use mod_tge, only: tge_dealloc
      call hydro_geom_dealloc()
      call hydro_dealloc()
      call tge_dealloc()
    end subroutine cleanup_grid

    @test
    subroutine test_simple_grid()
      use mod_lims, only: mtloc, mloc, nloc, ntloc
      use mod_hydrovars, only: art1, art2, dz, dzz, zz, dz2d, d
      use mod_tge, only: isonb
      call build_simple_grid()

      ! Trivial domain decomposition
      @assertEqual(nloc, ngl)
      @assertEqual(ntloc, ngl)
      @assertEqual(mloc, mgl)
      @assertEqual(mtloc, mgl)

      ! vertical cell centers (ZZ)
      @assertEqual(-.5, zz(2), message="ZZ")

      ! vertical level deltas (DZ)
      @assertEqual(1./3., dz(2), message="DZ", tolerance=1e-5)
      @assertEqual(1./3., dz2d(3,2), message="DZ2D", tolerance=1e-5)

      ! cell thicknesses (DZZ)
      @assertEqual(1./3., dzz(1), message="DZZ", tolerance=1e-5)

      ! areas
      @assertEqual(500000., art1(5), message="ART1", tolerance=1e-5)
      @assertRelativelyEqual(333333.33333, art1(7), message="ART1", tolerance=1e-5)
      @assertEqual(500000., art2(1), message="ART2", tolerance=1e-5)
      @assertEqual(1000000., art2(7), message="ART2", tolerance=1e-5)

      ! ISONB checks
      @assertEqual(1, isonb(6))
      @assertEqual(0, isonb(10))

    end subroutine test_simple_grid
end module test_grid
